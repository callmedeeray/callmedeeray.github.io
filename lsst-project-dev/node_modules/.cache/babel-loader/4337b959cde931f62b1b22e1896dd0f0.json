{"ast":null,"code":"var _jsxFileName = \"/Users/desiree/Documents/GitHub/callmedeeray.github.io/lsst-project-dev/src/InlineMultipleChoice.js\";\nimport React, { Component } from 'react';\n\nclass InlineMultipleChoice extends Component {\n  // info = {\n  // \"type\": \"inline-multiple-choice\",\n  // \"questionName\": \"Inline Multiple Choice Example\",\n  // \"questionText\": [\"Hydrogen atoms paroxysm of global death as a patch of light citizens of distant epochs \", \n  // \t\t\t\t\t\"SELECT\",\n  // \t\t\t\t\t\"prime number are creatures of the cosmos.\"],\n  // \"answerList\": [[\"Cosmic ocean\", \"Drake equation\", \"Star stuff\"]]\n  constructor(props) {\n    super(props);\n    this.answerList = this.answerList.bind(this);\n    this.makeQuestion = this.makeQuestion.bind(this);\n    this.state = {\n      activeOrNot: null\n    };\n    this.mousenter = this.mousenter.bind(this);\n    this.mouseexit = this.mouseexit.bind(this);\n  }\n\n  mousenter() {\n    this.setState({\n      activeOrNot: \"active-qa\"\n    });\n  }\n\n  mouseexit() {\n    this.setState({\n      activeOrNot: null\n    });\n  }\n\n  answerList(j) {\n    let answers = [];\n    let self = this;\n    self.props.info.answerList[j].forEach(function (d, i) {\n      answers.push(React.createElement(\"option\", {\n        key: self.props.info.questionName + 'option' + d,\n        value: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, d));\n    });\n    return answers;\n  }\n\n  makeQuestion() {\n    let question = [];\n    let sel = 0;\n    let self = this;\n    self.props.info.questionText.forEach(function (d, i) {\n      if (d !== \"SELECT\") {\n        question.push(React.createElement(\"span\", {\n          key: self.props.info.questionName + 'question' + d,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, d));\n      } else {\n        question.push(React.createElement(\"div\", {\n          className: \"answer select\",\n          key: self.props.info.questionName + i + 'select' + sel,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(\"select\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          selected: true,\n          disabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, \"Select the best answer\"), self.answerList(sel))));\n        sel++;\n      }\n    });\n    return question;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"qa multiple-choice inline-multiple-choice \" + this.state.activeOrNot,\n      onMouseEnter: this.mousenter,\n      onMouseLeave: this.mouseexit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, this.makeQuestion()));\n  }\n\n}\n\nexport default InlineMultipleChoice;","map":{"version":3,"sources":["/Users/desiree/Documents/GitHub/callmedeeray.github.io/lsst-project-dev/src/InlineMultipleChoice.js"],"names":["React","Component","InlineMultipleChoice","constructor","props","answerList","bind","makeQuestion","state","activeOrNot","mousenter","mouseexit","setState","j","answers","self","info","forEach","d","i","push","questionName","question","sel","questionText","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nclass InlineMultipleChoice extends Component {\n\t// info = {\n\t// \"type\": \"inline-multiple-choice\",\n\t// \"questionName\": \"Inline Multiple Choice Example\",\n\t// \"questionText\": [\"Hydrogen atoms paroxysm of global death as a patch of light citizens of distant epochs \", \n\t// \t\t\t\t\t\"SELECT\",\n\t// \t\t\t\t\t\"prime number are creatures of the cosmos.\"],\n\t// \"answerList\": [[\"Cosmic ocean\", \"Drake equation\", \"Star stuff\"]]\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.answerList = this.answerList.bind(this);\n\t\tthis.makeQuestion = this.makeQuestion.bind(this);\n\t\tthis.state = {activeOrNot: null};\n\t\tthis.mousenter = this.mousenter.bind(this);\n\t\tthis.mouseexit = this.mouseexit.bind(this);\n\t}\n\n\tmousenter() {\n\t\tthis.setState({activeOrNot: \"active-qa\"})\n\t}\n\n\tmouseexit() {\n\t\tthis.setState({activeOrNot: null})\n\t}\n\n\tanswerList(j) {\n\t\tlet answers = [];\n\t\tlet self=this;\n\t\tself.props.info.answerList[j].forEach(function(d,i) {\n\t\t\tanswers.push(<option key={self.props.info.questionName + 'option'+d} value={i}>{d}</option>)\n\t\t});\n\t\t\t\t\t\n\t\treturn answers;\n\t}\n\n\tmakeQuestion() {\n\t\tlet question = [];\n\t\tlet sel = 0;\n\t\tlet self=this;\n\t\tself.props.info.questionText.forEach(function(d,i) {\n\t\t\tif (d !== \"SELECT\") {\n\t\t\t\tquestion.push(<span key={self.props.info.questionName + 'question'+d}>{d}</span>)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tquestion.push(\n\t\t\t\t\t<div className=\"answer select\" key={self.props.info.questionName + i +'select'+sel}>\n\t\t\t\t\t\t<select>\n\t\t\t\t\t\t\t<option selected disabled>Select the best answer</option>\n\t\t\t\t\t\t\t{self.answerList(sel)}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t\tsel++;\n\t\t\t}\n\t\t})\n\t\treturn question;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className={\"qa multiple-choice inline-multiple-choice \" + this.state.activeOrNot} onMouseEnter={this.mousenter} onMouseLeave={this.mouseexit}>\n\t\t\t\t<div className=\"question\">\n\t\t\t\t\t{this.makeQuestion()}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\t\t\n}\n\nexport default InlineMultipleChoice;"]},"metadata":{},"sourceType":"module"}