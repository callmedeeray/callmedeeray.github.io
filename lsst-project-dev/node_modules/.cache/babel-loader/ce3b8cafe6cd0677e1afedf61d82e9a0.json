{"ast":null,"code":"var _jsxFileName = \"/Users/desiree/Documents/GitHub/callmedeeray.github.io/lsst-project-dev/src/CompoundFillBlank.js\";\nimport React, { Component } from 'react';\n\nclass CompoundFillBlank extends Component {\n  // info = {\n  // \t\"type\": \"fill-in-the-blank\",\n  // \t\"questionName\": \"Fill-in-the-blank Example\",\n  // \t\"questionText\": [\"Realm of the galaxies muse about made in the interiors of \",\"BLANK\",\".\"]}\n  constructor(props) {\n    super(props);\n    this.makeQuestion = this.makeQuestion.bind(this);\n    this.state = {\n      activeOrNot: null\n    };\n    this.mousenter = this.mousenter.bind(this);\n    this.mouseexit = this.mouseexit.bind(this);\n  }\n\n  mousenter() {\n    this.setState({\n      activeOrNot: \"active-qa\"\n    });\n  }\n\n  mouseexit() {\n    this.setState({\n      activeOrNot: null\n    });\n  }\n\n  makeQuestion() {\n    let question = [];\n    let self = this;\n    this.props.info.questionText.forEach(function (d, i) {\n      let bla = 0;\n\n      if (d !== \"BLANK\") {\n        question.push(React.createElement(\"span\", {\n          key: self.props.info.questionName + 'question' + d,\n          \"aria-hidden\": true,\n          role: \"presentation\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, d));\n      } else {\n        question.push(React.createElement(\"div\", {\n          key: self.props.info.questionName + i + 'blank' + bla,\n          className: \"answer text-input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          name: self.props.info.questionName,\n          id: self.props.info.questionName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        })));\n        bla++;\n      }\n    });\n    return question;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"qa fill-in-the-blank \" + this.state.activeOrNot,\n      onMouseEnter: this.mousenter,\n      onMouseLeave: this.mouseexit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: this.props.info.questionName,\n      className: \"screen-reader-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Fill in the blank: \", this.props.info.questionText.join('')), this.makeQuestion()));\n  }\n\n}\n\nexport default CompoundFillBlank;","map":{"version":3,"sources":["/Users/desiree/Documents/GitHub/callmedeeray.github.io/lsst-project-dev/src/CompoundFillBlank.js"],"names":["React","Component","CompoundFillBlank","constructor","props","makeQuestion","bind","state","activeOrNot","mousenter","mouseexit","setState","question","self","info","questionText","forEach","d","i","bla","push","questionName","render","join"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAGA,MAAMC,iBAAN,SAAgCD,SAAhC,CAA0C;AACzC;AACA;AACA;AACA;AAEAE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,WAAW,EAAE;AAAd,KAAb;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeH,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKI,SAAL,GAAiB,KAAKA,SAAL,CAAeJ,IAAf,CAAoB,IAApB,CAAjB;AACA;;AAEDG,EAAAA,SAAS,GAAG;AACX,SAAKE,QAAL,CAAc;AAACH,MAAAA,WAAW,EAAE;AAAd,KAAd;AACA;;AAEDE,EAAAA,SAAS,GAAG;AACX,SAAKC,QAAL,CAAc;AAACH,MAAAA,WAAW,EAAE;AAAd,KAAd;AACA;;AAEDH,EAAAA,YAAY,GAAG;AACd,QAAIO,QAAQ,GAAG,EAAf;AACA,QAAIC,IAAI,GAAC,IAAT;AACA,SAAKT,KAAL,CAAWU,IAAX,CAAgBC,YAAhB,CAA6BC,OAA7B,CAAqC,UAASC,CAAT,EAAWC,CAAX,EAAc;AAClD,UAAIC,GAAG,GAAG,CAAV;;AACA,UAAIF,CAAC,KAAK,OAAV,EAAmB;AAClBL,QAAAA,QAAQ,CAACQ,IAAT,CAAc;AAAM,UAAA,GAAG,EAAEP,IAAI,CAACT,KAAL,CAAWU,IAAX,CAAgBO,YAAhB,GAA+B,UAA/B,GAA0CJ,CAArD;AAAwD,6BAAxD;AAAoE,UAAA,IAAI,EAAC,cAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAyFA,CAAzF,CAAd;AACA,OAFD,MAGK;AACJL,QAAAA,QAAQ,CAACQ,IAAT,CAAc;AAAK,UAAA,GAAG,EAAEP,IAAI,CAACT,KAAL,CAAWU,IAAX,CAAgBO,YAAhB,GAA+BH,CAA/B,GAAmC,OAAnC,GAA4CC,GAAtD;AAA2D,UAAA,SAAS,EAAC,mBAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAyF;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAEN,IAAI,CAACT,KAAL,CAAWU,IAAX,CAAgBO,YAAzC;AAAuD,UAAA,EAAE,EAAER,IAAI,CAACT,KAAL,CAAWU,IAAX,CAAgBO,YAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAzF,CAAd;AACAF,QAAAA,GAAG;AACH;AACD,KATD;AAUA,WAAOP,QAAP;AACA;;AACDU,EAAAA,MAAM,GAAG;AACR,WACC;AAAK,MAAA,SAAS,EAAE,0BAA0B,KAAKf,KAAL,CAAWC,WAArD;AAAkE,MAAA,YAAY,EAAE,KAAKC,SAArF;AAAgG,MAAA,YAAY,EAAE,KAAKC,SAAnH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAO,MAAA,OAAO,EAAE,KAAKN,KAAL,CAAWU,IAAX,CAAgBO,YAAhC;AAA8C,MAAA,SAAS,EAAC,oBAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACqB,KAAKjB,KAAL,CAAWU,IAAX,CAAgBC,YAAhB,CAA6BQ,IAA7B,CAAkC,EAAlC,CADrB,CADD,EAIE,KAAKlB,YAAL,EAJF,CADD,CADD;AAUA;;AAhDwC;;AAoD1C,eAAeH,iBAAf","sourcesContent":["import React, { Component } from 'react';\n\n\nclass CompoundFillBlank extends Component {\n\t// info = {\n\t// \t\"type\": \"fill-in-the-blank\",\n\t// \t\"questionName\": \"Fill-in-the-blank Example\",\n\t// \t\"questionText\": [\"Realm of the galaxies muse about made in the interiors of \",\"BLANK\",\".\"]}\n\t\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.makeQuestion = this.makeQuestion.bind(this);\n\t\tthis.state = {activeOrNot: null};\n\t\tthis.mousenter = this.mousenter.bind(this);\n\t\tthis.mouseexit = this.mouseexit.bind(this);\n\t}\n\n\tmousenter() {\n\t\tthis.setState({activeOrNot: \"active-qa\"})\n\t}\n\n\tmouseexit() {\n\t\tthis.setState({activeOrNot: null})\n\t}\n\n\tmakeQuestion() {\n\t\tlet question = [];\n\t\tlet self=this;\n\t\tthis.props.info.questionText.forEach(function(d,i) {\n\t\t\tlet bla = 0;\n\t\t\tif (d !== \"BLANK\") {\n\t\t\t\tquestion.push(<span key={self.props.info.questionName + 'question'+d} aria-hidden role='presentation'>{d}</span>)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tquestion.push(<div key={self.props.info.questionName + i + 'blank'+ bla} className=\"answer text-input\"><input type=\"text\" name={self.props.info.questionName} id={self.props.info.questionName}\t/></div>)\n\t\t\t\tbla++;\n\t\t\t}\n\t\t})\n\t\treturn question;\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div className={\"qa fill-in-the-blank \" + this.state.activeOrNot} onMouseEnter={this.mousenter} onMouseLeave={this.mouseexit}>\n\t\t\t\t<div className=\"question\">\n\t\t\t\t\t<label htmlFor={this.props.info.questionName} className=\"screen-reader-only\">\n\t\t\t\t\t\tFill in the blank: {this.props.info.questionText.join('')}\n\t\t\t\t\t</label>\n\t\t\t\t\t{this.makeQuestion()}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\t\t\n}\n\nexport default CompoundFillBlank;"]},"metadata":{},"sourceType":"module"}